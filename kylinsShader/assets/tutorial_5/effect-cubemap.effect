// Effect Syntax Guide: https://github.com/cocos-creator/docs-3d/blob/master/zh/material-system/effect-syntax.md

CCEffect %{
  techniques:
  - name: opaque
    passes:
    - vert: general-vs:vert # builtin header
      frag: unlit-fs:frag
      properties: &props
        mainTexture:    { value: white }
        cubeTexture:    { value: white }
        maskTexture:    { value: white }
        reflectionStrengthen: { value: 0.5 }

        mainColor:      { value: [1, 1, 1, 1], editor: { type: color } }
  - name: transparent
    passes:
    - vert: general-vs:vert # builtin header
      frag: unlit-fs:frag
      blendState:
        targets:
        - blend: true
          blendSrc: src_alpha
          blendDst: one_minus_src_alpha
          blendSrcAlpha: src_alpha
          blendDstAlpha: one_minus_src_alpha
      properties: *props
}%

CCProgram unlit-fs %{
  precision highp float;
  #include <output>
  #include <cc-fog-fs>

  in vec2 v_uv;
  in vec3 v_position;
  in vec3 v_normal;

  uniform sampler2D mainTexture;
  uniform sampler2D maskTexture;
  uniform samplerCube cubeTexture;

  uniform Constant {
    vec4 mainColor;
    float reflectionStrengthen;
  };

  vec4 frag () {
    vec4 maskColor = texture(maskTexture,v_uv);

    float reflectionMask = maskColor.r * reflectionStrengthen;

    //reflect    R = V - 2 * N * dot(N,V)

    vec3 V = normalize(v_position - cc_cameraPos.xyz);
    vec3 N = normalize(v_normal);
    vec3 R = V - 2.0 * N * dot(N,V);
    vec4 cubeColor = texture(cubeTexture,R);

    vec4 col = mainColor * texture(mainTexture, v_uv);

    col.rgb = mix(col.rgb,cubeColor.rgb,reflectionMask);
    CC_APPLY_FOG(col, v_position);
    #if SHOW_REFLECTION_STRENGTHEN
        return CCFragOutput(vec4(reflectionMask,reflectionMask,reflectionMask,1.0));
    #else
    return CCFragOutput(col);
    #endif
  }
}%
