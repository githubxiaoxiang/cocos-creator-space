{
  "ver": "1.0.25",
  "uuid": "a49473af-60f8-4b26-86bb-37a092c7afb2",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\nvoid main() {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * pos;\n  v_uv0 = a_uv0;\n  v_color = a_color;\n  gl_Position = pos;\n}",
        "frag": "\nprecision highp float;\nvarying vec4 v_color;\nvarying vec2 v_uv0;\nuniform sampler2D texture;\nuniform float dx;\nuniform float dy;\nvoid main()\n{\n  vec2 uv = v_uv0.xy;\n  vec4 sum = vec4(0.);\n  vec4 d = vec4(dx, dy, -dy, 0.);\n  sum += texture2D(texture, uv-d.xy);\n  sum += texture2D(texture, uv-d.xw);\n  sum += texture2D(texture, uv-d.xz);\n  sum += texture2D(texture, uv+d.wz);\n  sum += texture2D(texture, uv+d.wy);\n  sum += texture2D(texture, uv+d.xz);\n  sum += texture2D(texture, uv+d.xw);\n  sum += texture2D(texture, uv+d.xy);\n  vec4 col = texture2D(texture, uv);\n  vec4 le3 = step(sum, vec4(3.1));\n  vec4 oneCase = step(vec4(1.9), sum) * le3;\n  vec4 zeroCase = step(vec4(2.9), sum) * le3;\n  col = mix(zeroCase, oneCase, col);\n  gl_FragColor = vec4(col.rgb, 1.0);\n}"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\nin vec2 a_uv0;\nout vec2 v_uv0;\nvoid main() {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * pos;\n  v_uv0 = a_uv0;\n  v_color = a_color;\n  gl_Position = pos;\n}",
        "frag": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec4 v_color;\nin vec2 v_uv0;\nuniform sampler2D texture;\nuniform UARGS {\n  float dx;\n  float dy;\n};\nvoid main()\n{\n  vec2 uv = v_uv0.xy;\n  vec4 sum = vec4(0.);\n  vec4 d = vec4(dx, dy, -dy, 0.);\n  sum += texture(texture, uv-d.xy);\n  sum += texture(texture, uv-d.xw);\n  sum += texture(texture, uv-d.xz);\n  sum += texture(texture, uv+d.wz);\n  sum += texture(texture, uv+d.wy);\n  sum += texture(texture, uv+d.xz);\n  sum += texture(texture, uv+d.xw);\n  sum += texture(texture, uv+d.xy);\n  vec4 col = texture(texture, uv);\n  vec4 le3 = step(sum, vec4(3.1));\n  vec4 oneCase = step(vec4(1.9), sum) * le3;\n  vec4 zeroCase = step(vec4(2.9), sum) * le3;\n  col = mix(zeroCase, oneCase, col);\n  gl_FragColor = vec4(col.rgb, 1.0);\n}"
      }
    }
  ],
  "subMetas": {}
}