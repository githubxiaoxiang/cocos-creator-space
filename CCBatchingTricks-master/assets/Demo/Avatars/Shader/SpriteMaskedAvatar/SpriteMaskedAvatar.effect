// Copyright 2020 Cao Gaoting<caogtaa@gmail.com>
// https://caogtaa.github.io
// This file is licensed under the MIT License.
// License text available at https://opensource.org/licenses/MIT

/*
 * Date: 2020-07-22 20:37:58
 * LastEditors: GT<caogtaa@gmail.com>
 * LastEditTime: 2020-07-23 16:48:49
*/ 
 
CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        texture: { value: white }
        mask: { value: white }
        alphaThreshold: { value: 0.5 }
}%
 
 
CCProgram vs %{
  precision highp float;
 
  #include <cc-global>
  #include <cc-local>
 
  in vec3 a_position;
  in vec2 a_mask_uv;
  in vec2 a_uv0;
  out vec2 v_uv0;
  out vec2 v_mask_uv;
 
  void main () {
    vec4 pos = vec4(a_position, 1);
    pos = cc_matViewProj * pos;
 
    v_uv0 = a_uv0;
    v_mask_uv = a_mask_uv;
    gl_Position = pos;
  }
}%
 
 
CCProgram fs %{
  precision highp float;
  
  #include <alpha-test>
  #include <texture>
  #include <cc-global>
  #include <cc-local>
 
  in vec2 v_uv0;              // 底图uv
  uniform sampler2D texture;  // 底图纹理
  in vec2 v_mask_uv;          // 遮罩图uv，通过顶点属性传入
  uniform sampler2D mask;     // 遮罩图纹理，通过材质属性传入
  uniform UARGS {
    float enableMask;         // 遮罩图开关控制，通过材质属性传入
  };

  void main () {
    // 对底图采样
    vec4 col = texture(texture, v_uv0);

    // 对遮罩图采样
    vec4 maskCol = texture(mask, v_mask_uv);

    // 片元透明度使用遮罩图透明度
    // enableMask控制是否让遮罩生效
    col.a = mix(col.a, maskCol.a, enableMask);
    gl_FragColor = col;
  }
}%
 
