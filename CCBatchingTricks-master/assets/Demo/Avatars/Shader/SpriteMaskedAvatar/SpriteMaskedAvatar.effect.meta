{
  "ver": "1.0.25",
  "uuid": "7666fb72-54b8-4756-ab6c-d380cc6160f7",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nattribute vec3 a_position;\nattribute vec2 a_mask_uv;\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\nvarying vec2 v_mask_uv;\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * pos;\n  v_uv0 = a_uv0;\n  v_mask_uv = a_mask_uv;\n  gl_Position = pos;\n}",
        "frag": "\nprecision highp float;\n#if USE_ALPHA_TEST\n#endif\nvarying vec2 v_uv0;\nuniform sampler2D texture;\nvarying vec2 v_mask_uv;\nuniform sampler2D mask;\nuniform float enableMask;\nvoid main () {\n  vec4 col = texture2D(texture, v_uv0);\n  vec4 maskCol = texture2D(mask, v_mask_uv);\n  col.a = mix(col.a, maskCol.a, enableMask);\n  gl_FragColor = col;\n}"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec2 a_mask_uv;\nin vec2 a_uv0;\nout vec2 v_uv0;\nout vec2 v_mask_uv;\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * pos;\n  v_uv0 = a_uv0;\n  v_mask_uv = a_mask_uv;\n  gl_Position = pos;\n}",
        "frag": "\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec2 v_uv0;\nuniform sampler2D texture;\nin vec2 v_mask_uv;\nuniform sampler2D mask;\nuniform UARGS {\n  float enableMask;\n};\nvoid main () {\n  vec4 col = texture(texture, v_uv0);\n  vec4 maskCol = texture(mask, v_mask_uv);\n  col.a = mix(col.a, maskCol.a, enableMask);\n  gl_FragColor = col;\n}"
      }
    }
  ],
  "subMetas": {}
}