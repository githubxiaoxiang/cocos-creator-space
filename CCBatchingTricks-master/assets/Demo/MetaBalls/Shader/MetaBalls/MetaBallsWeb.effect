/****************************************************************************
 Author: GT <caogtaa@gmail.com>
 https://caogtaa.github.io
****************************************************************************/

CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        texture: { value: white }
}%

CCProgram vs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>

  uniform VSARGS {
    vec2 offset;
    vec2 reverseRes;
    float yratio;       // Y轴坐标需要乘以的比例，即iResolution.y / iResolution.x
  };

  in vec2 a_position;
  in vec2 a_center;
  out vec2 v_corner;
  out vec2 v_center;
   
  void main() {
    vec4 pos = vec4(a_position, 0.0, 1.0);
    gl_Position = cc_matViewProj * pos;

    // no a_corner in web version
    // use a_position instead of a_corner
    v_corner = a_position.xy * reverseRes + offset;
    v_center = a_center.xy * reverseRes + offset;

    v_corner.y *= yratio;
    v_center.y *= yratio;
  }
}%

// by caogtaa
CCProgram fs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>

  in vec2 v_corner;
  in vec2 v_center;

  uniform FSARGS {
    float radius;   // X轴方向上的半径，外部通过box2d世界大小和粒子大小计算获得
  };
  uniform sampler2D texture;

  void main()
  {
    // 当前uv原点是左下，范围[0, 1]
    vec2 uv = v_corner;
    vec2 center = v_center;

    float mask = smoothstep(radius * 3., radius, distance(uv, center));
    // float mask = smoothstep(0., 1., distance(uv, center));
    vec4 col = vec4(1.0);
    col.a = mask;

    // col = vec4(uv.x, uv.y, 0.0, 1.0);
    gl_FragColor = col;
  }
}%
