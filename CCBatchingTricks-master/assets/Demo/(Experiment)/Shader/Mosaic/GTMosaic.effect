// Copyright 2020 Cao Gaoting<caogtaa@gmail.com>
// https://caogtaa.github.io
// This file is licensed under the MIT License.
// License text available at https://opensource.org/licenses/MIT

/*
 * Date: 2020-07-28 16:48:01
 * LastEditors: GT<caogtaa@gmail.com>
 * LastEditTime: 2020-07-28 16:49:23
*/ 
 
CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        texture: { value: white }
        alphaThreshold: { value: 0.5 }
        xres: { value: 1.0 }
        yres: { value: 1.0 }
}%
 
 
CCProgram vs %{
  precision highp float;
 
  #include <cc-global>
  #include <cc-local>
 
  in vec3 a_position;
  in vec4 a_color;
  out vec4 v_color;
 
  #if USE_TEXTURE
  in vec2 a_uv0;
  out vec2 v_uv0;
  #endif
 
  void main () {
    vec4 pos = vec4(a_position, 1);
 
    #if CC_USE_MODEL
    pos = cc_matViewProj * cc_matWorld * pos;
    #else
    pos = cc_matViewProj * pos;
    #endif
 
    #if USE_TEXTURE
    v_uv0 = a_uv0;
    #endif
 
    v_color = a_color;
 
    gl_Position = pos;
  }
}%
 
 
CCProgram fs %{
  precision highp float;
  
  #include <alpha-test>
  #include <texture>
  #include <cc-global>
  #include <cc-local>
 
  in vec4 v_color;
 
  #if USE_TEXTURE
  in vec2 v_uv0;
  uniform sampler2D texture;
  #endif

  // 根据屏幕分辨率调整为方形，可选
  uniform UARGS {
    float xres;
    float yres;
  };
 
  float Circle(vec2 uv, vec2 origin, float r, float blur) {
    float d = distance(uv, origin);
    return smoothstep(r + blur, r - blur, d);
  }

  // const float grids = 50.;

  void main () {
    vec2 uv = v_uv0.xy;

    // uv变化前先采样
    // vec3 color = texture(texture, uv).rgb;

    // 居中后拉伸，中心区域uv范围变为[-0.5, 0.5]
    // uv -= 0.5;
    // uv.y *= yres / xres;
    float grids = fract(cc_time.x) * 100.;

    vec2 grid_uv = fract(uv * grids);
    vec2 grid_id = floor(uv * grids);

    vec3 color = texture(texture, grid_id / grids).rgb;
    // vec3 color = vec3(c); 
    gl_FragColor = vec4(color, 1.0);
  }
}%
 
